🎯 Median of Two Sorted Arrays

  

🚀 Problem Statement

📌 Given two sorted arrays nums1 and nums2 of sizes m and n, return the median of the two sorted arrays.

The overall run-time complexity should be O(log (m+n)).

📖 Explanation

🔹 The median is the middle value in an ordered list.

If the total number of elements is odd, the median is the middle element.

If the total number of elements is even, the median is the average of the two middle elements.

💡 Approach

✅ Merge the two sorted arrays into a single list.
✅ Sort the merged list.
✅ Find the median:

If odd length, return the middle element.

If even length, return the average of the two middle elements.

📝 Code Implementation
```
class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        num3 = nums1 + nums2  # Merging two arrays
        num3.sort()  # Sorting the merged array
        z = len(num3)
        y = int((z - 1) / 2)
        x = int((z - 2) / 2)
        w = int(z / 2)
        
        if z % 2 != 0:
            return num3[y]  # Return the middle element if odd length
        else:
            return float((num3[x] + num3[w]) / 2.0)  # Average of middle elements if even length
```
🧩 Examples

Example 1
```
nums1 = [1, 3]
nums2 = [2]
sol = Solution()
print(sol.findMedianSortedArrays(nums1, nums2))  # Output: 2.0
```
💡 Explanation: The merged list is [1, 2, 3]. The middle element is 2, so the median is 2.0.

Example 2
```
nums1 = [1, 2]
nums2 = [3, 4]
sol = Solution()
print(sol.findMedianSortedArrays(nums1, nums2))  # Output: 2.5
```
💡 Explanation: The merged list is [1, 2, 3, 4]. The median is (2 + 3) / 2 = 2.5.

⏳ Time Complexity

⏩ Sorting approach: O((m+n) log(m+n))
⏩ Optimized binary search approach: O(log(m+n)) (Recommended for large inputs)

⚡ Optimized Approach (Binary Search)

Instead of merging and sorting, we can use binary search to find the correct partition. This reduces time complexity to O(log(m+n)).

🚀 Would you like to see an optimized solution? Let me know! 🤖
